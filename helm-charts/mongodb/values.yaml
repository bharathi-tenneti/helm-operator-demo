affinity: {}
affinityArbiter: {}
annotations: {}
clusterDomain: cluster.local
configmap: null
extraVolumeMounts: []
extraVolumeMountsArbiter: []
extraVolumes: []
extraVolumesArbiter: []
image:
  debug: false
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/mongodb
  tag: 4.2.3-debian-10-r10
ingress:
  annotations: null
  certManager: false
  enabled: false
  hosts:
  - name: mongodb.local
    path: /
  secrets: null
  tls:
  - hosts:
    - mongodb.local
    secretName: mongodb.local-tls
initConfigMap: {}
labels: {}
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  enabled: false
  extraArgs: ""
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.10.0-debian-10-r9
  livenessProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 15
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  podAnnotations:
    prometheus.io/port: "9216"
    prometheus.io/scrape: "true"
  readinessProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  serviceMonitor:
    additionalLabels: {}
    alerting:
      additionalLabels: {}
      rules: {}
    enabled: false
mongodbDirectoryPerDB: false
mongodbDisableSystemLog: false
mongodbEnableIPv6: false
mongodbExtraFlags: []
mongodbSystemLogVerbosity: 0
nodeSelector: {}
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: true
  mountPath: /bitnami/mongodb
  size: 8Gi
  subPath: ""
podAnnotations: {}
podLabels: {}
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
replicaSet:
  enabled: false
  name: rs0
  pdb:
    enabled: true
    minAvailable:
      arbiter: 1
      primary: 1
      secondary: 1
  replicas:
    arbiter: 1
    secondary: 1
  useHostnames: true
resources: {}
resourcesArbiter: {}
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
service:
  annotations: {}
  port: 27017
  type: ClusterIP
sidecars: []
sidecarsArbiter: []
tolerations: []
updateStrategy:
  type: RollingUpdate
usePassword: true
useStatefulSet: false
volumePermissions:
  enabled: false
  image:
    pullPolicy: Always
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
  resources: {}
